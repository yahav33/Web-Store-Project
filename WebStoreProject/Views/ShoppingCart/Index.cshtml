@model List<Product>
@inject WebStoreProject.Services.IRepositoryProducts Products
@inject IHttpContextAccessor HttpContextAccessor
@inject IReadFromBrowser Reader



@if (Model != null)
{
    <table class="table table-striped table-dark container">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Name</th>
                <th scope="col">Price</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < Model.Count; i++)
            {
                <tr>
                    <th scope="row">@(i + 1)</th>
                    <td>@Model[i].Title</td>
                    <td>@Model[i].Price$</td>
                    <td><a asp-route-productId="@Model[i].ProductId" asp-controller="ShoppingCart" asp-action="RemoveFromCart" class="btn btn-primary">Remove</a></td>
                </tr>
            }

        </tbody>
    </table>

        <div class="card container">
            <h5 class="card-header">Summery</h5>
            <div class="card-body">
                @if (Reader.ReadCookie("Cart") != null)
                {
                    <h5 class="card-text">Total : @Products.TotalCardWorth(Reader.ReadCookie("Cart")) </h5>
                    <p class="card-text">Total For Members : @(Products.TotalCardWorthForMembers(Reader.ReadCookie("Cart"))) </p>
                }
                else
                {
                    <h5 class="card-text">Total : 0 </h5>
                    <p class="card-text">Total For Members : 0 </p>
                }

                <td><a asp-controller="Home" asp-action="Index" class="btn btn-primary">Go Home</a></td>
                <a  asp-route-shoppingCart="@Reader.ReadCookie("Cart")" asp-controller="ShoppingCart" asp-action="Purchase" class="btn btn-primary">Purchase</a>
            </div>
        </div>
    
   
}